{"ast":null,"code":"var _jsxFileName = \"/Users/nathansmith/Desktop/quote-machine/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  async function loadQuote() {\n    let color = colors[Math.floor(Math.random() * colors.length)];\n    try {\n      const response = await fetch(\"https://api.quotable.io/random\");\n      const {\n        statusCode,\n        statusMessage,\n        ...data\n      } = await response.json();\n      if (!response.ok) throw new Error(`${statusCode} ${statusMessage}`);\n      setData(data);\n    } catch (error) {\n      console.error(error);\n      setData({\n        content: \"Sorry, something went wrong. Try again in a minute\",\n        author: \"-The man at the computer\"\n      });\n    }\n  }\n  useEffect(() => {\n    loadQuote();\n  }, []);\n  if (!data) return null;\n  const colors = ['#2f8b78', '#2ec66d', '#314f6c', '#b67711', '#d76a5e', '#7f3c9a', '#c14642', '#6f4b4f', '#4b0b16', '#aca974', '#4e8a82', '#5fa13b'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    className: \"quote-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"text\",\n      children: '\"' + data.content + '\"'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"author\",\n      children: '- ' + data.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"tweet-quote\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: loadQuote,\n        children: \"New quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","data","setData","loadQuote","color","colors","Math","floor","random","length","response","fetch","statusCode","statusMessage","json","ok","Error","error","console","content","author","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/nathansmith/Desktop/quote-machine/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  async function loadQuote() {\n    let color = colors[Math.floor(Math.random() * colors.length)]\n    try {\n      const response = await fetch(\"https://api.quotable.io/random\");\n      const { statusCode, statusMessage, ...data } = await response.json();\n      if (!response.ok) throw new Error(`${statusCode} ${statusMessage}`);\n      setData(data);\n    } catch (error) {\n      console.error(error);\n      setData({ content: \"Sorry, something went wrong. Try again in a minute\",\n                author: \"-The man at the computer\"\n               });\n    }\n  }\n\n  useEffect(() => {\n    loadQuote();\n  }, []);\n\n  if(!data) return null;\n  const colors = ['#2f8b78','#2ec66d','#314f6c','#b67711','#d76a5e','#7f3c9a','#c14642','#6f4b4f','#4b0b16','#aca974','#4e8a82','#5fa13b'];\n\n  return (\n    <div id=\"quote-box\" className=\"quote-block\">\n            <div id=\"text\">{'\"' + data.content + '\"'}</div>\n            <div id=\"author\">{'- ' + data.author}</div>\n            <div id=\"buttons\">\n                <a id=\"tweet-quote\"><div className=\"tweet-button\"></div></a>\n                <button id=\"new-quote\" onClick={loadQuote}>New quote</button>\n            </div>\n        </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,eAAeQ,SAASA,CAAA,EAAG;IACzB,IAAIC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGH,MAAM,CAACI,MAAM,CAAC,CAAC;IAC7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,MAAM;QAAEC,UAAU;QAAEC,aAAa;QAAE,GAAGZ;MAAK,CAAC,GAAG,MAAMS,QAAQ,CAACI,IAAI,EAAE;MACpE,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAE,GAAEJ,UAAW,IAAGC,aAAc,EAAC,CAAC;MACnEX,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBf,OAAO,CAAC;QAAEiB,OAAO,EAAE,oDAAoD;QAC7DC,MAAM,EAAE;MACT,CAAC,CAAC;IACb;EACF;EAEAxB,SAAS,CAAC,MAAM;IACdO,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAG,CAACF,IAAI,EAAE,OAAO,IAAI;EACrB,MAAMI,MAAM,GAAG,CAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,CAAC;EAExI,oBACEP,OAAA;IAAKuB,EAAE,EAAC,WAAW;IAACC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACnCzB,OAAA;MAAKuB,EAAE,EAAC,MAAM;MAAAE,QAAA,EAAE,GAAG,GAAGtB,IAAI,CAACkB,OAAO,GAAG;IAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC/C7B,OAAA;MAAKuB,EAAE,EAAC,QAAQ;MAAAE,QAAA,EAAE,IAAI,GAAGtB,IAAI,CAACmB;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC3C7B,OAAA;MAAKuB,EAAE,EAAC,SAAS;MAAAE,QAAA,gBACbzB,OAAA;QAAGuB,EAAE,EAAC,aAAa;QAAAE,QAAA,eAACzB,OAAA;UAAKwB,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC5D7B,OAAA;QAAQuB,EAAE,EAAC,WAAW;QAACO,OAAO,EAAEzB,SAAU;QAAAoB,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd;AAAC3B,EAAA,CAnCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}