{"ast":null,"code":"var _jsxFileName = \"/Users/nathansmith/Desktop/quote-machine/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  const [color, setColor] = useState('#333');\n  async function loadQuote() {\n    const colors = ['#2f8b78', '#2ec66d', '#314f6c', '#b67711', '#d76a5e', '#7f3c9a', '#c14642', '#6f4b4f', '#4b0b16', '#aca974', '#4e8a82', '#5fa13b'];\n    try {\n      const response = await fetch(\"https://api.quotable.io/random\");\n      const {\n        statusCode,\n        statusMessage,\n        ...data\n      } = await response.json();\n      if (!response.ok) throw new Error(`${statusCode} ${statusMessage}`);\n      setData(data);\n      setColor(color);\n      let color = colors[Math.floor(Math.random() * colors.length)];\n      document.querySelector(' body').style.backgroundColor = color;\n    } catch (error) {\n      console.error(error);\n      setData({\n        content: \"Sorry, something went wrong. Try again in a minute\",\n        author: \"-The man at the computer\"\n      });\n    }\n  }\n  useEffect(() => {\n    loadQuote();\n  }, []);\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    className: \"quote-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"text\",\n      style: {\n        color: color\n      },\n      children: '\"' + data.content + '\"'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"author\",\n      style: {\n        color: color\n      },\n      children: '- ' + data.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"tweet-quote\",\n        style: {\n          backgroundColor: color\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: loadQuote,\n        style: {\n          backgroundColor: color\n        },\n        children: \"New quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QByxGyLIusVzRJgvi1bCAk8h/r0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","data","setData","color","setColor","loadQuote","colors","response","fetch","statusCode","statusMessage","json","ok","Error","Math","floor","random","length","document","querySelector","style","backgroundColor","error","console","content","author","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/nathansmith/Desktop/quote-machine/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [color, setColor] = useState('#333');\n\n  async function loadQuote() {\n    const colors = ['#2f8b78','#2ec66d','#314f6c','#b67711','#d76a5e','#7f3c9a','#c14642','#6f4b4f','#4b0b16','#aca974','#4e8a82','#5fa13b'];\n    try {\n      const response = await fetch(\"https://api.quotable.io/random\");\n      const { statusCode, statusMessage, ...data } = await response.json();\n      if (!response.ok) throw new Error(`${statusCode} ${statusMessage}`);\n      setData(data);\n      setColor(color)\n      \n      let color = colors[Math.floor(Math.random() * colors.length)]\n      document.querySelector(' body').style.backgroundColor = color;\n    } catch (error) {\n      console.error(error);\n      setData({ content: \"Sorry, something went wrong. Try again in a minute\",\n                author: \"-The man at the computer\"\n               });\n    }\n  }\n\n  useEffect(() => {\n    loadQuote();\n  }, []);\n\n  if(!data) return null;\n  \n  \n  return (\n    <div id=\"quote-box\" className=\"quote-block\">\n            <div id=\"text\" style={{color: color}}>{'\"' + data.content + '\"'}</div>\n            <div id=\"author\" style={{color: color}}>{'- ' + data.author}</div>\n            <div id=\"buttons\">\n                <a id=\"tweet-quote\" style={{backgroundColor: color}}><div className=\"tweet-button\"></div></a>\n                <button id=\"new-quote\" onClick={loadQuote} style={{backgroundColor: color}}>New quote</button>\n            </div>\n        </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}